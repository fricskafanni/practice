{"filter":false,"title":"Users.class.php","tooltip":"/dev/calculateTime/Users.class.php","undoManager":{"mark":13,"position":13,"stack":[[{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["    private $dataLog;",""],"id":2}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["require_once __DIR__ . '/../models/Log.class.php';",""],"id":3}],[{"start":{"row":14,"column":4},"end":{"row":185,"column":5},"action":"remove","lines":["function isLoggedIn() {","        if (!empty($_SESSION['user'])){","            return true;","        } else {","            return false;","        }","    }","    ","    function login() {","        $email = $_POST['email'];","        $password = $_POST['password'];","        $functionName = 'login';","","        $response = $this->db->getUser($email, $password);","","        $error = $this->error = $response['error'];","        $message = $this->message = $response['message'];","        ","        $fopen = $this->dataLog->logData($functionName, $message);","        ","        if ($error == 1){","            return array('error' => $error, 'message' => $message);","        }else {","            $_SESSION['user'] = $message;","            //var_dump($_SESSION['user']['role']);","            return array('error' => $error, 'message' => $_SESSION['user']['role']);","        }","    }","    ","    function logout() {","        $functionName = 'logout';","        //$message = $_SESSION['user'];","        ","        //$fopen = $this->dataLog->logData($functionName, $message);","        unset($_SESSION['user']);","    }","    ","    function get()","    {","        if (!$this->isLoggedIn())","            return FALSE;","            ","        return $_SESSION['user'];","    }","    ","    function update()","    {","        $this->error = '';","        $email = $_POST['email'];","        $password = $_POST['password'];  ","        $name = $_POST['name'];  ","        $lastname = $_POST['lastname'];  ","        $dob = implode('-', array_reverse(explode('/', $_POST['dob'])));  ","        ","        if(!$this->isLoggedIn())","            return FALSE;","        ","        $response = $this->db->update($email, $password, $name, $lastname, $dob);","        ","            if(!empty($response['user'])) {","                $_SESSION['user'] = $response['user'];","                return $_SESSION['user']['role'];","            }","            else {","                $this->error = $response['error'];","                return FALSE;","            }","    }","    ","    function listUsers(){","        $response = $this->db->getUsers();","        ","        return $response;","    }","    ","    function createUser(){","        ","    }","    ","    function deleteUser(){","        $userId = $_POST['userId'];","        ","        $response = $this->db->deleteUser($userId);","","        if(!empty($response)) {","            return TRUE;","        }","        else {","            $this->error = $response['error'];","            return FALSE;","        }","    }","    ","    function getEditUser(){","        $userId = $_GET['id'];","        ","        $response = $this->db->editUser($userId);","        if(!empty($response)) {","            return $response;","        }","        else {","            $this->error = $response['error'];","            return FALSE;","        }","    }","    ","    function updateUserByAdmin()","    {","        $this->error = '';","        $id = $_POST['id'];","        $email = $_POST['email'];","        $name = $_POST['name'];  ","        $lastname = $_POST['lastname'];  ","        $dob = implode('-', array_reverse(explode('/', $_POST['dob'])));  ","        $response = $this->db->updateUserData($id, $email, $name, $lastname, $dob);","        ","            if($response) {","                return true;","            }","            else {","                $this->error = $response['error'];","                return FALSE;","            }","    }","        ","    function updateUserPasswordByAdmin()","    {","        $this->error = '';","        $id = $_POST['id'];","        $password = $_POST['password'];","        $password1 = $_POST['password1'];","        ","        $result = $this->db->getUserPassword($id, $password, $password1);","        ","        if(!empty($result)) {","            $error = $this->error = $result['error'];","            $message = $this->message = $result['message'];","            return array('error' => $error, 'message' => $message);","        }","        else {","            return $this->error = $result['error'];","        }","    }","    ","    ","    function getError(){","        return $this->error;","    }","    ","    function CreateNewUser(){","        ","        $this->error = '';","        $email = $_POST['email'];","        $password = $_POST['password'];  ","        $name = $_POST['name'];  ","        $lastname = $_POST['lastname'];  ","        $dob = implode('-', array_reverse(explode('/', $_POST['dob'])));  ","        $hash = md5($password);","        ","        if(!$this->isLoggedIn())","            return FALSE;","        ","        $response = $this->db->createUser($email, $hash, $name, $lastname, $dob);","            if(!empty($response)) {","                $error = $this->error = $response['error'];","                $message = $this->message = $response['message'];","                return array('error' => $error, 'message' => $message);","            }","            else {","                return $this->error = $result['error'];","            }","    }"],"id":4}],[{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"remove","lines":["    ",""],"id":5}],[{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"remove","lines":["    ",""],"id":6}],[{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"remove","lines":["        $this->dataLog = new LogClass;",""],"id":7}],[{"start":{"row":11,"column":5},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":9},{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"insert","lines":["    "]},{"start":{"row":12,"column":4},"end":{"row":13,"column":0},"action":"insert","lines":["",""]},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":13,"column":4},"end":{"row":18,"column":4},"action":"insert","lines":["foreach ($moments as $moment) {","        $sql = \"INSERT INTO moments (resulting_time, idUser, dateAssignment) VALUES ('$moment', NULL, NULL)\";","        if ($conn->query($sql) === FALSE) {","            echo \"Error: \" . $sql . \"<br>\" . $conn->error;","        }","    "],"id":10}],[{"start":{"row":18,"column":4},"end":{"row":18,"column":5},"action":"insert","lines":["}"],"id":11}],[{"start":{"row":12,"column":4},"end":{"row":12,"column":44},"action":"insert","lines":["function storeMomentsInTable($moments) {"],"id":12}],[{"start":{"row":18,"column":5},"end":{"row":18,"column":6},"action":"insert","lines":["}"],"id":13}],[{"start":{"row":18,"column":5},"end":{"row":20,"column":4},"action":"insert","lines":["","        ","    "],"id":14}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "],"id":15},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"remove","lines":["        ",""],"id":16}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":11,"column":5},"end":{"row":11,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":7,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1711360909007,"hash":"839e28f9db0d0beef0e7b1ebcad31b0aef1589f2"}